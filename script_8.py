# 10. Show the complete directory structure and create a zip file
import zipfile

print("=== Custom Countdown Timer HACS Integration ===")
print("\nDirectory Structure:")
print("custom_countdown_timer/")
print("â”œâ”€â”€ README.md")
print("â”œâ”€â”€ hacs.json")
print("â”œâ”€â”€ version.json")
print("â”œâ”€â”€ install.sh")
print("â””â”€â”€ custom_components/")
print("    â””â”€â”€ custom_countdown_timer/")
print("        â”œâ”€â”€ __init__.py")
print("        â”œâ”€â”€ manifest.json")
print("        â”œâ”€â”€ const.py")
print("        â”œâ”€â”€ config_flow.py") 
print("        â””â”€â”€ sensor.py")

# Create a zip file with all the integration files
zip_filename = "custom_countdown_timer_hacs.zip"
with zipfile.ZipFile(zip_filename, 'w', zipfile.ZIP_DEFLATED) as zipf:
    # Add all files to the zip
    for root, dirs, files in os.walk(base_dir):
        for file in files:
            file_path = os.path.join(root, file)
            arc_path = os.path.relpath(file_path, base_dir)
            zipf.write(file_path, arc_path)

print(f"\nâœ… Created {zip_filename} with complete HACS integration")

# List the contents of the zip file
print(f"\nZip Contents:")
with zipfile.ZipFile(zip_filename, 'r') as zipf:
    for file_info in zipf.filelist:
        print(f"  {file_info.filename}")

print(f"\nðŸ“¦ Integration package ready: {zip_filename}")
print("\nðŸš€ Installation Options:")
print("1. HACS: Upload to GitHub and add as custom repository")
print("2. Manual: Extract to custom_components/ directory")
print("3. Script: Run install.sh from Home Assistant")